# -*- coding: utf-8 -*-
"""Google Gemini API with LangChain Project.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1CJedZT2UfBbRSNiTUhx8Um_Ja-em48XJ

#Install the Python SDK
"""

!pip install -q -U google-generativeai

"""##Import packages"""

import pathlib
import textwrap

import google.generativeai as genai

from IPython.display import display
from IPython.display import Markdown


def to_markdown(text):
    text = text.replace("â€¢", "  *")
    return Markdown(textwrap.indent(text, "> ", predicate=lambda _: True))

# Used to securely store your API key
from google.colab import userdata

"""##Setup your API key"""

# Or use `os.getenv('GEMINI_API_KEY')` to fetch an environment variable.
GOOGLE_API_KEY = userdata.get("GEMINI_API_KEY")

genai.configure(api_key=GOOGLE_API_KEY)

"""##List models"""

for m in genai.list_models():
    if "generateContent" in m.supported_generation_methods:
        print(m.name)

"""##Generate text from text inputs"""

model = genai.GenerativeModel("gemini-1.5-flash")

# Commented out IPython magic to ensure Python compatibility.
# %%time
# response = model.generate_content("What is Jupyter notebook?")

to_markdown(response.text)

response.prompt_feedback

response.candidates

# Commented out IPython magic to ensure Python compatibility.
# %%time
# response = model.generate_content("What is Jupyter notebook", stream=True)

for chunk in response:
    print(chunk.text)
    print("_" * 80)

response = model.generate_content("What is the meaning of life?", stream=True)

response.prompt_feedback

try:
    response.text
except Exception as e:
    print(f"{type(e).__name__}: {e}")

"""##Generate text from image and text inputs"""

!curl -o image.jpg https://www.backwoodshome.com/bhm/wp-content/uploads/2015/12/goat-4215435_1920.jpg

import PIL.Image

img = PIL.Image.open("image.jpg")
img

model = genai.GenerativeModel("gemini-1.5-flash")

response = model.generate_content(img)

to_markdown(response.text)

response = model.generate_content(
    [
        "Write a short, engaging blog post based on this picture. It should include a description of the baby goats in the photo and talk about them.",
        img,
    ],
    stream=True,
)
response.resolve()

to_markdown(response.text)